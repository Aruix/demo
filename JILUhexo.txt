HEXO是一个静态的页面
HEXO的使用：
1.必须要安装nodejs和npm
2.安装hexo模块--$ npm install -g hexo-cli
3.新建hexo项目--选择好文件夹，cd进入文件夹 hexo init
4.建好hexo项目之后,安装相关的依赖包 npm install
--------
使用主题
1.找好主题之后，在themes文件夹下，利用git命令 
git clone git链接 <folder> //folder就是文件夹的名字 
2.不同的主题可能需要不同的依赖包，所以需要下载相对的依赖包
3.将_config.yml中的theme修改为 <folder>
举个例子（主题maupassant主题安装）：
克隆主题
$ git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant
安装依赖（有些主题需要安装依赖，可在GitHub中查看相关的设置）
$ npm install hexo-renderer-pug --save
$ npm install hexo-renderer-sass --save
修改_config.yml文件
theme: maupassant

HEXO常用操作：
HEXO的言语标题描述都可以在_config.yml中修改，
语言在根目录下的_config.yml文件中的language设置
一般下载的主题中也会有_config.yml文件，可以做一些相应的修改。
每个属性对应的操作，要查看作者提供文档。
如何实现站内搜索
站内搜索需要自己申请一个swiftype账号，然后把swiftype_key填写到主题中_config.yml相应的地方
已注册swiftype账号 w_zengrui@126.com ，但是需要连入自己的域名。
站内搜索插件：
hexo-generator-search
相关文章：
https://segmentfault.com/a/1190000011917419
<<<<<<< HEAD
有些主题只在主页有搜索的功能，要想所有的页面都有搜索的功能：
1、所有的页面必须都引用相应的js文件
2.在不同的页面由于路径不同，可能会有找不到search.xml的错误，解决方法是
search:
  path: /search.xml
在path前加一个反斜杠

一般的主题都会内置本地搜索的功能，要开启功能，需要先安装上面的插件
cnpm install hexo-generator-search --save
并在根目录的_config.yml中添加：
search:
  path: search.xml
  field: post
>>>>>>> f124fe829db62fca9115294f8f7ac7d628674a1a

在主题中添加图片
1、图片的路径是 theme/hhemeName/source/img
2、图片的引用路径是/img/picName.png

如何写文章：
hexo的文章是.md格式的文件，需要了解文件的书写格式以及hexo的

字数统计插件
相关链接：http://ibruce.info/2015/04/04/busuanzi/

官方常用插件
相关链接：https://hexo.io/plugins/

接入评论系统
livere.com/ (比较推荐，不需要备案)
changyan.kuaizhan.com/
网易的有言

统计系统接入
cnzz和百度

部署到GitHub
第一次用了下面的方法：
GitHubPages
使用hexo g和hexo d打包文件之后，在public中，然后将public中的文件，上传到GitHub中。
登录GitHub之后，进入hexo的文件仓库，点击上面的setting按钮
下拉到GitHubPages，配置完成。
没有成功。
第二种方法：
1、在GitHub新建一个项目，项目命名为Aruix.github.io（格式不能改变Aruix为自己的用户名）
2、在本地新建一个hexo的项目，hexo init、npm install、hexo server（成功后说明安装完成）
3、修改_config.yml文件，如下：
------
deploy:
  type: git
  repo: git@github.com:Aruix/Aruix.github.io.git
  branch: master
------冒号后面要加空格
3、执行hexo clean删除掉之前打包的public中的文件
4、hexo g重新打包文件
5、hexo d部署到GitHub，这时可能会出现下面的错误
Deployer not found: git错误，此时需要安装hexo-deployer-git插件
npm install hexo-deployer-git，安装完成后执行hexo d即可。

HEXO域名解析：
1.自己申请一个域名
2.在服务台，把域名解析到aruix.github.io,如下：
CNAME	www	默认	aruix.github.io	10 分钟
A	@	默认	192.30.252.154	--	10 分钟
A	@	默认	192.30.252.153	--	10 分钟
其中第一个是自己的git域名，第二个和第三个是GitHub提供的ip地址，三者缺一不可
3.在根目录的source文件夹中，新建一个CNAME文件，没有后缀名
文件中添加你的域名，不带http如：www.aruix.top
4.重新生成静态页，上传至GitHub
5.完成上面的步骤，就可以使用www.aruix.top访问页面了。

新clone的主题因为含有git文件无法和整个项目一起上传到GitHub，解决方式：
在该主题的文件夹下运行：
rm -rf .git 强制删除.git文件
再把其他的git文件删除 即可。

HEXO主题操作：
可在官方文档中查看https://hexo.io/zh-cn/docs/helpers.html
1、将文章内容转换文纯文本，并进行截取
strip_html(post.content).substring(0,theme.title_length)
其中theme.title_length是在主题的_config.yml中添加
2、使用如 阅读全文 归档 等已经设置好各国语言的单词文字时，使用
__('post.read_more') //read_more可以在主题的language文件夹中查找
3、获取文章的分类categories
第一种使用list_categories方法
list_categories(post.categories, {
  show_count: false,
  class: 'post_category',
  style: 'none'
})
最后会生成分类的链接
第二种方法是：
{% for tag in post.tags %}
  <a class="post_category-link" href="{{ tag.path }}">
  {{ tag.name }}
  </a>
{% endfor %}
其中：.name是分类的名字，.path是分类的链接

PHP搭建博客
使用wordpress