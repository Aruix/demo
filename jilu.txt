/****这是以前的***/
企业QQ风格
http://b.qq.com/wp/

网页(PC端)中通过链接打开QQ应用
href： http://wpa.qq.com/msgrd?v=3&uin=1559471851&site=qq&menu=yes
uin后添上自己的QQ号码

阿里巴巴矢量图库
http://www.iconfont.cn/

内联css样式优先级大于伪类选择器
如果<div class="div" style="color:red"></div>
那么.div:hover{color:green}就没有效果了

如果要设置元素的宽和高，那么元素的display属性，必须不是inline

系统的字体设置 font-family: "Microsoft YaHei", Helvetica, Arial, sans-serif;

设置文字被选中时的状态
::selection 文字被选中时的状态
::-moz-selection
在有些浏览器需要设置display:block 此属性才起作用
设置文字不能被选中：
body{
    -webkit-user-select:none;
    -moz-user-select:none;
    -ms-user-select:none;
    user-select:none;
}

通过data- 和content:attr(),实现显示提示信息。
*这里attr()可以添加任意的属性值，如href title等
*content属性具体介绍，可以看这个链接 http://www.zhangxinxu.com/wordpress/2010/04/css-content%E5%86%85%E5%AE%B9%E7%94%9F%E6%88%90%E6%8A%80%E6%9C%AF%E4%BB%A5%E5%8F%8A%E5%BA%94%E7%94%A8/
代码如下：
html：
<div>
	<span data-toolip="hello world">鼠标放上来试试!</span>
</div>
css:
span{
	position: relative;
	display: inline-block;
}
span:hover{
	cursor: pointer;
}
span:hover:before{
	content: attr(data-toolip);
	background:#d9444a;
	color: #FFFFFF;
	padding: .8em 1em;
	position: absolute;
	left: 100%;
	top: -70%;
	margin-left: 14px;
	white-space: pre;
}
span:hover:after{
	content: '';
	position: absolute;
	left: 108%;
	width: 0;
	height: 0;
	border-right: 8px solid #d9444a;
	border-top: 8px solid transparent;
	border-bottom: 8px solid transparent;
}

利用css禁止鼠标事件:
pointer-events:auto/none;
此属性设置auto时，表示没有设置此属性
此属性设置none时，表示禁止了任何鼠标事件
兼容性：Opera以及IE不支持

white-space属性
normal：
    默认处理方式。
pre：
    用等宽字体显示预先格式化的文本，不合并文字间的空白距离，当文字超出边界时不换行。可查阅pre对象
nowrap：
    强制在同一行内显示所有文本，合并文本间的多余空白，直到文本结束或者遭遇br对象。
pre-wrap：
    用等宽字体显示预先格式化的文本，不合并文字间的空白距离，当文字碰到边界时发生换行。
pre-line：
    保持文本的换行，不保留文字间的空白距离，当文字碰到边界时发生换行。

AI转曲：
Ctrl+A全选之后，Ctrl+shift+O转曲

css各个属性设置的百分数的参考
相对于父元素宽度的：
[max/min-]width、left、right、text-indent、padding、margin 等；
相对于父元素高度的：
[max/min-]height、top、bottom 等；
相对于主轴长度的：
flex-basis 等；
相对于继承字号的：font-size 等；
相对于自身字号的：line-height 等；
相对于自身宽高的：
border-radius、background-size、border-image-width、transform: translate()、transform-origin、zoom、clip-path 等；
相对于行高的：
vertical-align 等；
特殊算法的：
background-position （方向长度 / 该方向除背景图之外部分总长度 * 100）、border-image-slice （相对于图片尺寸）、filter 系列函数等；
如果自身设置 position: absolute，
“父元素”指：与其关系最近的设置定位的祖先元素
如果 position: fixed，“父元素”指视口。


javascript中this的概念：
总的原则，那就是this指的是，调用函数的那个对象。
1、纯碎的函数调用(this指代全局global)
function test(){
  this.x = 1;
  alert(this.x)
}
test(); //1 this指代全局对象window
2、作为对象的方法调用(this指代这个对象)
var o = {
  x:1,
  y:2,
  z:function(){
    console.log(this.x);
  }
}
o.z()//1 this指代 对象o
3、作为构造函数来调用(指代这个新的对象)
function test() {
  this.x = 1;
}
var o = new test();
alert(o.x);//1 this指代新的对象o
4、apply调用(this指代第一个参数)
x = '这是全局的'
var o = {
  x: 1,
  m: function () {
    console.log(this.x);
  }
}
o.m();//1
o.m.apply();//"这是全局的"(如果没有参数，就指代全局global)
o.m.apply(o);//1 (把o作为参数，那么this指代o对象)


1、prototype.bind的用法
将this指代第一个参数
var myObj = {
  specialFunction: function () {
	alert(123);
  },
  anotherSpecialFunction: function () {
	alert(456);
  },
  getAsyncData: function (cb) {
      cb();
  },
  render: function () {
      var that = this;
      this.getAsyncData(function () {
          that.specialFunction();
          that.anotherSpecialFunction();
      });
  }
};
myObj.render();
将上面的render替换为下面的，结果是一样的！
render: function () {
    this.getAsyncData(function () {
        this.specialFunction();
        this.anotherSpecialFunction();
    }.bind(this));
}
sieoalllaeixeyllxowoeiuuueo
/****新建文件之后的***/
作为一个程序员，我有一个执念，我知道，只要我键盘敲击的足够快，就可以逆转时空改变未来。当我敲下“hello world”的时候，新的时代已经来临，新的篇章已经开启！
chrome浏览器font-size的最小值是12px,我们设置em或者百分数时，必须要注意
em是相对于自身font-size的大小(自己设置或继承的)来设定的。

四平日报社的项目，设计稿1920px，中心区域1400px，使用rem布局，但是ie8及以下版本不支持rem
解决方法：width：10rem;width:100px;实现优雅降级。这里要注意rem单位要写在后面。

jquery的ready方法是相对于document的，不管前面绑定的是哪个元素，如：
$("#demo").ready(function(){
  $(this).***//这里的$(this)指代的是document
})

详解：[if lte IE 9]……[endif]
<!--[if !IE]><!--> 除IE外都可识别 <!--<![endif]-->
<!--[if IE]> 所有的IE可识别 <![endif]-->
<!--[if lt IE 5.5]> 小于5.5(不包括5.5) <![endif]-->
<!--[if lte IE 6]> 小于6(包括6) <![endif]-->
<!--[if gt IE 5]> 大于5(不包括5) <![endif]-->
<!--[if gte IE 5]> 大于5(包括5) <![endif]-->
其他的运算符：
()、&、|、！
例如：[if (gt IE 5)&(lt IE 7)]
详细解释可参考链接： http://www.weste.net/2013/8-9/93104.html

javascript中的width，height，offsetWidth等获取宽高的方法，如何获取position为absolute的元素的高度。

元素设置position:absolute后，与margin left right top bottom width height的关系

swiper2.0可以兼容到ie7 ，但是没有fade渐隐模式，onInit和onFirstInit在不同的浏览器中，触发的方式不同。
oninit是非第一次初始化的时候触发，但是在Chrome中，第一次刷新页面也会触发，而在firefox中不会触发。
而onFirstInit在Chrome第一次初始化的时候却不会触发。

emmet代码缩写：
^上级符号的使用,如：
<div class="header-bottom">
  <div class="logo-img"><img src="" alt=""></div>
  <form action="" id="search">
    <input type="text">
    <input type="submit">
  </form>
  <div class="ad"><img src="" alt=""></div>
</div>
可以写作：
div.header-bottom>div.logo-img>img^form>input[type=text]+input[type=submit]^div.ad>img

jquery返回顶部：
$("html").animate({scrollTop:0},500)
这里不能使用$(document),document不能设置scrollTop属性
但是页面的滚动事件scroll，不能绑定到$("html")上，需要绑定在$(document)上
$(document).scroll(function(){
  var x = $("html")[0].scrollTop;//滚动轴距顶部的距离
})


使用position弹性设置宽度：
left: 0;
right:0;
padding:7px 10px 14px 10px;
padding: 0.07rem 0.1rem 0.14rem 0.1rem;
width: auto;
元素的left，right，padding-left和padding-right都确定，width设置为auto

关于rem.js一定要放在最前面加载，
如四平日报社项目使用了swiper.js插件，rem在插件之后加载，在firefox中就会出现图片排列错位的问题。

使用js获取select下拉框的选中值：
原生方法：
var obj = document.getElementByIdx_x(”testSelect”); //定位id(select的id)
var index = obj.selectedIndex; // 选中索引
var text = obj.options[index].text; // 选中文本
var value = obj.options[index].value; // 选中值
当然如果option设置了value属性，可以直接写：
var value = obj.value,而获取文本的话只能用上面的方法
jquery方法：
$('#testSelect option:selected').text();//选中的文本
$('#testSelect option:selected') .val();//选中的值
$("#testSelect ").get(0).selectedIndex;//索引
//这里的selected并不是css的选择器，是jquery的特殊写法
//所以jquery的写法，是先找到select，后面加空格option:selected
jquery的第二种写法：
第二种方式
$("#tesetSelect").find("option:selected").text();//选中的文本

//css3弹性布局flex找时间补上